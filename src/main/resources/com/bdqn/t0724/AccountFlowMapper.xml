<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdqn.t0724.mapper.AccountFlowMapper">
  <resultMap id="BaseResultMap" type="com.bdqn.t0724.model.AccountFlow">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="amount" jdbcType="DECIMAL" property="amount" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="tradeTime" jdbcType="TIMESTAMP" property="tradetime" />
    <result column="actionType" jdbcType="TINYINT" property="actiontype" />
    <result column="account_id" jdbcType="BIGINT" property="accountId" />
    <result column="usableAmount" jdbcType="DECIMAL" property="usableamount" />
    <result column="freezedAmount" jdbcType="DECIMAL" property="freezedamount" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from accountflow
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bdqn.t0724.model.AccountFlow">
    insert into accountflow (id, amount, note, 
      tradeTime, actionType, account_id, 
      usableAmount, freezedAmount)
    values (#{id,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{note,jdbcType=VARCHAR}, 
      #{tradetime,jdbcType=TIMESTAMP}, #{actiontype,jdbcType=TINYINT}, #{accountId,jdbcType=BIGINT}, 
      #{usableamount,jdbcType=DECIMAL}, #{freezedamount,jdbcType=DECIMAL})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bdqn.t0724.model.AccountFlow">
    update accountflow
    set amount = #{amount,jdbcType=DECIMAL},
      note = #{note,jdbcType=VARCHAR},
      tradeTime = #{tradetime,jdbcType=TIMESTAMP},
      actionType = #{actiontype,jdbcType=TINYINT},
      account_id = #{accountId,jdbcType=BIGINT},
      usableAmount = #{usableamount,jdbcType=DECIMAL},
      freezedAmount = #{freezedamount,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, amount, note, tradeTime, actionType, account_id, usableAmount, freezedAmount
    from accountflow
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, amount, note, tradeTime, actionType, account_id, usableAmount, freezedAmount
    from accountflow
  </select>
</mapper>