<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bdqn.t0724.mapper.AccountMapper">
  <resultMap id="BaseResultMap" type="com.bdqn.t0724.model.Account">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tradePassword" jdbcType="VARCHAR" property="tradepassword" />
    <result column="usableAmount" jdbcType="DECIMAL" property="usableamount" />
    <result column="freezedAmount" jdbcType="DECIMAL" property="freezedamount" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="unReceiveInterest" jdbcType="DECIMAL" property="unreceiveinterest" />
    <result column="unReceivePrincipal" jdbcType="DECIMAL" property="unreceiveprincipal" />
    <result column="unReturnAmount" jdbcType="DECIMAL" property="unreturnamount" />
    <result column="remainBorrowLimit" jdbcType="DECIMAL" property="remainborrowlimit" />
    <result column="borrowLimit" jdbcType="DECIMAL" property="borrowlimit" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from account
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.bdqn.t0724.model.Account">
    insert into account (id, tradePassword, usableAmount, 
      freezedAmount, version, unReceiveInterest, 
      unReceivePrincipal, unReturnAmount, remainBorrowLimit, 
      borrowLimit)
    values (#{id,jdbcType=BIGINT}, #{tradepassword,jdbcType=VARCHAR}, #{usableamount,jdbcType=DECIMAL}, 
      #{freezedamount,jdbcType=DECIMAL}, #{version,jdbcType=INTEGER}, #{unreceiveinterest,jdbcType=DECIMAL}, 
      #{unreceiveprincipal,jdbcType=DECIMAL}, #{unreturnamount,jdbcType=DECIMAL}, #{remainborrowlimit,jdbcType=DECIMAL}, 
      #{borrowlimit,jdbcType=DECIMAL})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bdqn.t0724.model.Account">
    update account
    set tradePassword = #{tradepassword,jdbcType=VARCHAR},
      usableAmount = #{usableamount,jdbcType=DECIMAL},
      freezedAmount = #{freezedamount,jdbcType=DECIMAL},
      version = #{version,jdbcType=INTEGER},
      unReceiveInterest = #{unreceiveinterest,jdbcType=DECIMAL},
      unReceivePrincipal = #{unreceiveprincipal,jdbcType=DECIMAL},
      unReturnAmount = #{unreturnamount,jdbcType=DECIMAL},
      remainBorrowLimit = #{remainborrowlimit,jdbcType=DECIMAL},
      borrowLimit = #{borrowlimit,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, tradePassword, usableAmount, freezedAmount, version, unReceiveInterest, 
    unReceivePrincipal, unReturnAmount, remainBorrowLimit, borrowLimit
    from account
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, tradePassword, usableAmount, freezedAmount, version, unReceiveInterest, 
    unReceivePrincipal, unReturnAmount, remainBorrowLimit, borrowLimit
    from account
  </select>
</mapper>